{"version":3,"sources":["index.js"],"names":["PhoenixLiveViewDropzone","node","document","createElement","el","appendChild","liveView","generateUrl","statusUpdate","dataset","target","data","pushEventTo","pushEvent","flags","buttonText","fileTypes","split","text","app","Elm","Main","init","ports","requestUrl","subscribe","uploadStatus","dataId","id","dataUrl","url","addUploadUrl","send"],"mappings":";;;AAAA,aAuDeA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,QAAAA,QAAAA,6BAAAA,EArDf,IAAA,EAAA,QAAA,cAqDeA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAnDFA,IAAAA,EAAAA,WAmDEA,SAAAA,IAAAA,EAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,UAlDH,MAAA,WACJC,IAAAA,EAAOC,SAASC,cAAc,OAC7BC,KAAAA,GAAGC,YAAYJ,GAEhBK,IAEAC,EAAaC,EAFbF,EAAW,KAIX,GAAA,KAAKF,GAAGK,QAAQC,OAAQ,CACtBA,IAAAA,EAAS,KAAKN,GAAGK,QAAQC,OAC7BH,EAAc,SAACI,GAASL,OAAAA,EAASM,YAAYF,EAAQ,eAAgB,CAAC,eAAgBC,KACtFH,EAAe,SAACG,GAASL,OAAAA,EAASM,YAAYF,EAAQ,eAAgB,CAAC,cAAeC,UAEtFJ,EAAc,SAACI,GAASL,OAAAA,EAASO,UAAU,eAAgB,CAAC,eAAgBF,KAC5EH,EAAe,SAACG,GAASL,OAAAA,EAASO,UAAU,eAAgB,CAAC,cAAeF,KAI1EG,IAAAA,EAAQ,GAER,KAAKV,GAAGK,QAAQM,aAClBD,EAAMC,WAAa,KAAKX,GAAGK,QAAQM,YAGjC,KAAKX,GAAGK,QAAQO,YAClBF,EAAME,UAAY,KAAKZ,GAAGK,QAAQO,UAAUC,MAAM,MAGhD,KAAKb,GAAGK,QAAQS,OAClBJ,EAAMI,KAAO,KAAKd,GAAGK,QAAQS,MAG1BC,KAAAA,IAAMC,EAAIC,IAAAA,KAAKC,KAAK,CAACR,MAAOA,EAAOb,KAAMA,IACzCkB,KAAAA,IAAII,MAAMC,WAAWC,UAAUlB,GAC/BY,KAAAA,IAAII,MAAMG,aAAaD,UAAUjB,GAEjCmB,KAAAA,OAAS,KAAKvB,GAAGK,QAAQmB,GACzBC,KAAAA,QAAU,KAAKzB,GAAGK,QAAQqB,MAapB9B,CAAAA,IAAAA,UAVH,MAAA,WACJS,IAAAA,EAAU,KAAKL,GAAGK,QAClBA,GAAW,KAAKkB,SAAWlB,EAAQmB,IAAM,KAAKC,UAAYpB,EAAQqB,MAC/DH,KAAAA,OAASlB,EAAQmB,GACjBC,KAAAA,QAAUpB,EAAQqB,IAClBX,KAAAA,IAAII,MAAMQ,aAAaC,KAAK,CAACJ,GAAI,KAAKD,OAAQG,IAAK,KAAKD,eAKpD7B,EAnDFA,GAmDEA,QAAAA,wBAAAA,EAAAA,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA","file":"dist.js","sourceRoot":"../../src","sourcesContent":["'use strict';\n\nimport { Elm } from \"./Main.elm\";\n\nexport class PhoenixLiveViewDropzone {\n  mounted() {\n    var node = document.createElement(\"div\");\n    this.el.appendChild(node);\n\n    var liveView = this;\n\n    var generateUrl, statusUpdate;\n\n    if (this.el.dataset.target) {\n      var target = this.el.dataset.target;\n      generateUrl = (data) => liveView.pushEventTo(target, \"phx-dropzone\", [\"generate-url\", data]);\n      statusUpdate = (data) => liveView.pushEventTo(target, \"phx-dropzone\", [\"file-status\", data]);\n    } else {\n      generateUrl = (data) => liveView.pushEvent(\"phx-dropzone\", [\"generate-url\", data]);\n      statusUpdate = (data) => liveView.pushEvent(\"phx-dropzone\", [\"file-status\", data]);\n    }\n\n\n    var flags = {};\n\n    if (this.el.dataset.buttonText) {\n      flags.buttonText = this.el.dataset.buttonText;\n    }\n\n    if (this.el.dataset.fileTypes) {\n      flags.fileTypes = this.el.dataset.fileTypes.split(\",\");\n    }\n\n    if (this.el.dataset.text) {\n      flags.text = this.el.dataset.text;\n    }\n\n    this.app = Elm.Main.init({flags: flags, node: node});\n    this.app.ports.requestUrl.subscribe(generateUrl);\n    this.app.ports.uploadStatus.subscribe(statusUpdate);\n\n    this.dataId = this.el.dataset.id;\n    this.dataUrl = this.el.dataset.url;\n  }\n\n  updated() {\n    var dataset = this.el.dataset;\n    if (dataset && this.dataId !== dataset.id && this.dataUrl !== dataset.url) {\n      this.dataId = dataset.id;\n      this.dataUrl = dataset.url;\n      this.app.ports.addUploadUrl.send({id: this.dataId, url: this.dataUrl});\n    }\n  }\n}\n\nexport default PhoenixLiveViewDropzone;\n"]}